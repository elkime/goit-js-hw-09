{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAiBC,SAASC,kBAAkB,SAAS,GACrDC,EAAiBF,SAASC,kBAAkB,QAAQ,GACpDE,EAAcH,SAASC,kBAAkB,UAAU,GACnDG,EAASJ,SAASK,eAAe,iBACjCC,EAAON,SAASO,cAAc,QAGpC,SAASC,IAEoB,KAAzBT,EAAeU,OACU,KAAzBP,EAAeO,OACO,KAAtBN,EAAYM,MAEZL,EAAOM,UAAW,EAElBN,EAAOM,UAAW,C,CAVtBN,EAAOM,UAAW,EAclBX,EAAeY,iBAAiB,QAASH,GACzCN,EAAeS,iBAAiB,QAASH,GACzCL,EAAYQ,iBAAiB,QAASH,GAEtCJ,EAAOO,iBAAiB,SAAS,SAAAC,GAC/BA,EAAMC,iBAEN,IAAMC,EAAYC,SAAShB,EAAeU,OACpCO,EAAYD,SAASb,EAAeO,OACpCQ,EAASF,SAASZ,EAAYM,OAEhCS,EAAU,EACVC,EAAW,EACXC,EAAQN,EACNO,EAAUC,aAAY,WAC1B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,IAAIC,SAAQ,SAACC,EAASC,GAChBL,EACFI,EAAQ,WAA0BE,OAAfV,EAAS,QAAYU,OAANT,EAAM,OAExCQ,EAAO,YAA2BC,OAAfV,EAAS,QAAYU,OAANT,EAAM,M,IAEzCU,MACD,SAAArB,GACEZ,EAAAkC,OAAOC,QAAQ,gBAAwBH,OAANpB,G,IAEnC,SAAAwB,GACEpC,EAAAkC,OAAOG,QAAQ,cAAoBL,OAANI,G,IAIjCf,IACAC,EAAWA,GAAY,EACvBC,EAAQA,GAASJ,EACbE,IAAYD,IACdkB,cAAcd,GACdf,EAAK8B,QACLhC,EAAOM,UAAW,E,GAEnBM,EAAYF,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst initDelayInput = document.getElementsByName('delay')[0];\nconst delayStepInput = document.getElementsByName('step')[0];\nconst amountInput = document.getElementsByName('amount')[0];\nconst submit = document.getElementById('submit-button');\nconst form = document.querySelector('form');\nsubmit.disabled = true;\n\nfunction checkInputs() {\n  if (\n    initDelayInput.value !== '' &&\n    delayStepInput.value !== '' &&\n    amountInput.value !== ''\n  ) {\n    submit.disabled = false;\n  } else {\n    submit.disabled = true;\n  }\n}\n\ninitDelayInput.addEventListener('input', checkInputs);\ndelayStepInput.addEventListener('input', checkInputs);\namountInput.addEventListener('input', checkInputs);\n\nsubmit.addEventListener('click', event => {\n  event.preventDefault();\n\n  const initDelay = parseInt(initDelayInput.value);\n  const delayStep = parseInt(delayStepInput.value);\n  const amount = parseInt(amountInput.value);\n\n  let counter = 0;\n  let position = 1;\n  let delay = initDelay;\n  const timerId = setInterval(() => {\n    const shouldResolve = Math.random() > 0.3;\n\n    new Promise((resolve, reject) => {\n      if (shouldResolve) {\n        resolve(`promise ${position} in ${delay}ms`);\n      } else {\n        reject(` promise ${position} in ${delay}ms`);\n      }\n    }).then(\n      value => {\n        Notify.success(`✅ Fulfilled  ${value}`);\n      },\n      error => {\n        Notify.failure(`❌ Rejected ${error}`);\n      }\n    );\n\n    counter++;\n    position = position += 1;\n    delay = delay += delayStep;\n    if (counter === amount) {\n      clearInterval(timerId);\n      form.reset();\n      submit.disabled = true;\n    }\n  }, delayStep + initDelay);\n});\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$initDelayInput","document","getElementsByName","$ce04d3a99e08e73b$var$delayStepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$submit","getElementById","$ce04d3a99e08e73b$var$form","querySelector","$ce04d3a99e08e73b$var$checkInputs","value","disabled","addEventListener","event","preventDefault","initDelay","parseInt","delayStep","amount","counter","position","delay","timerId","setInterval","shouldResolve","Math","random","Promise","resolve","reject","concat","then","Notify","success","error","failure","clearInterval","reset"],"version":3,"file":"03-promises.11a68110.js.map"}